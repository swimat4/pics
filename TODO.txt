- complete conversion to classes in FlickrAPI
    - look at this for possible guidance on XML -> Python object conversion
        http://blog.ianbicking.org/2007/08/02/atom-models/
    - fix User, Person, Contact -> Person
        ./flickrapi.py photos.recentlyUpdated min_date=2007-02-11 extras=date_taken,owner_name,icon_server,original_format,last_update,geo,tags,machine_tags
        ./flickrapi.py photos.getInfo 140542114
- convert existing pics.py to new FlickrAPI
- pics info (dump all info on a photo from flickr)
    - currently hits flickr with flickr.photos.getInfo
    - eventually should use the local cache
- start figuring out how the meta data should be editted
- 'pics edit' to add a tag to a pic (use a test pic, need write perm)
- 'pics diff'
- 'pics commit' (with edits)
- 'pics add' and 'pics commit' to add a pic and a set
- 'pics find': search substring in id, tags, title, desc, comments, EXIF data
- track more photo data: 'photos.getInfo' add: notes, comments, editability,
  full tag info, more owner data, license, rotation, description
- BUG:
    [~/pics/2007-01]$ pics ls ..
    pics: error: ..: no such photo or directory
- ability to choose which sizes get downloaded and to play with them
- 'pics ls' and 'pics info' (and probably others) should be updated so
  that the WorkingCopy method does the work and generates info. Then the
  *shell* method caller should do the console display.
- drop "dict" ls format in favour of "pics info" (when have local version
  of that)
- remote 'pics ls' in date dir
    pics ls flickr://trento/2007-01   # remote info


Long Term: auth handling
========================

- Fixup the auth steps
  (http://flickr.com/services/api/auth.howto.desktop.html) by either patching
  flickrapi.py or writing my own (possibly a fork).
  For now we just deal with the hack.
  
  
flickrapi.py
============

- fill in FlickrAPI as needed
- POST vs. GET (some require POST, some theoretically shouldn't be POST)
- auth_token caching? Use the same cache as the other flickrapi? Yes if
  reasonable. Make this caching optional.
- ElementFlickrAPI cogging:
    - nice doc strings
    - add pythondoc tags for args and exceptions
- note hidden API method:
  http://www.flickr.com/services/api/flickr.photos.delete.html

