- pics update:
    - do we need to watch for photo dupes in photos.recentlyUpdated? Add
      a check for that.
    - drop sentinel
- pics co:
    - make the size downloaded an option
        small (go for quick look and debugging)
        original (for archiving and printing)


- convert existing pics.py to new FlickrAPI
- pics info (dump all info on a photo from flickr)
    - currently hits flickr with flickr.photos.getInfo
    - eventually should use the local cache
- start figuring out how the meta data should be editted
- 'pics edit' to add a tag to a pic (use a test pic, need write perm)
- 'pics diff'
- 'pics commit' (with edits)
- 'pics add' and 'pics commit' to add a pic and a set
- 'pics find': search substring in id, tags, title, desc, comments, EXIF data
- track more photo data: 'photos.getInfo' add: notes, comments, editability,
  full tag info, more owner data, license, rotation, description
- BUG:
    [~/pics/2007-01]$ pics ls ..
    pics: error: ..: no such photo or directory
- ability to choose which sizes get downloaded and to play with them
- 'pics ls' and 'pics info' (and probably others) should be updated so
  that the WorkingCopy method does the work and generates info. Then the
  *shell* method caller should do the console display.
- drop "dict" ls format in favour of "pics info" (when have local version
  of that)
- remote 'pics ls' in date dir
    pics ls flickr://trento/2007-01   # remote info


Long Term: auth handling
========================

- If ever publish 'pics', it should get its own API key.
  
  
simpleflickrapi.py
==================

- fill in FlickrAPI as needed
- POST vs. GET (some require POST, some theoretically shouldn't be POST)
- note hidden API method:
  http://www.flickr.com/services/api/flickr.photos.delete.html

